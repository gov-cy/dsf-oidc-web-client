name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  # pull_request:
    # branches: [ master ]

permissions:
      contents: read
      packages: write
      
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
    ### TAG-1
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }} # required for better experience using pre-releases
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          # INITIAL_VERSION: 1.0.0
          WITH_V: true
          PRERELEASE: false
          DEFAULT_BRANCH: main
          DEFAULT_BUMP: patch
      ###

      ### TAG-2
      - name: 'Get tag'
        id: tag
        uses: 'WyriHaximus/github-action-get-previous-tag@8a0e045f02c0a3a04e1452df58b90fc7e555e950'

      - name: Set correct environment
        run: |
          TAG=${{ steps.tag.outputs.tag }}
          echo "TAG=$TAG" >> "$GITHUB_ENV"
      ###

      - name: Checkout repository
        uses: actions/checkout@v2
      
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          ### TAG-3
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ env.TAG }}
            # type=semver,pattern={{major}}.{{minor}},value=${{ env.TAG }}
            # type=semver,pattern={{major}},value=${{ env.TAG }}
          ###

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # secrets: |
          #   github_token=${{ secrets.GITHUB_TOKEN }}
          # build-args: |
          #   NUGET_ACCESSTOKEN=${{ secrets.ACCESS_TOKEN }}
          #   GITHUB_ACTOR=${{ github.actor }}      

  #aks_deploy:
    #needs: build
    #runs-on: self-hosted
    
    #steps:
      ##AKS Deployment using kubeconfig method.
      #- name: Kubernetes set context
      #  uses: Azure/k8s-set-context@v1.1
      #  with:
      #    method: kubeconfig
      #    kubeconfig: ${{ secrets.AKS_STAGING_CONFIG }}

      #- name: Run the kubectl script
      #  run: |
      #    kubectl rollout restart deployment dsf-nsf-service --namespace=default
